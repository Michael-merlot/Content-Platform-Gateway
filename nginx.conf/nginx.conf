events {
    worker_connections 1024;
}

http {
    # основная конфигурация для всех блоков
    include       mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;
    client_max_body_size 10m;

    # логи в JSON-формате для последующего анализа
    log_format json_combined escape=json
        '{'
        '"time_local":"$time_local",'
        '"remote_addr":"$remote_addr",'
        '"remote_user":"$remote_user",'
        '"request":"$request",'
        '"status": "$status",'
        '"body_bytes_sent":"$body_bytes_sent",'
        '"request_time":"$request_time",'
        '"http_referrer":"$http_referer",'
        '"http_user_agent":"$http_user_agent",'
        '"upstream_addr":"$upstream_addr",'
        '"upstream_response_time":"$upstream_response_time"'
        '}';

    # определяем кеш для статических ресурсов
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=api_cache:10m max_size=500m inactive=60m;
    proxy_temp_path /var/cache/nginx/tmp;

    # стратегия Round Robin (по умолчанию)
    upstream api_gateway {
        server api-gateway-1:80;
        server api-gateway-2:80;
        server api-gateway-3:80;
        
        # неявно используется Round Robin
        # можно раскомментировать для явной стратегии Least Connections
        # least_conn;
    }
    
    # стратегия IP Hash для обеспечения привязки сессий
    upstream api_gateway_sticky {
        ip_hash;
        server api-gateway-1:80;
        server api-gateway-2:80;
        server api-gateway-3:80;
    }
    
    # балансировка с проверкой работоспособности
    upstream api_gateway_health_check {
        server api-gateway-1:80 max_fails=3 fail_timeout=30s;
        server api-gateway-2:80 max_fails=3 fail_timeout=30s;
        server api-gateway-3:80 max_fails=3 fail_timeout=30s;
        
        # включаем проверку активных соединений
        least_conn;
    }
    
    # локальный HTTP сервер для тестирования
    server {
        listen 80;
        server_name localhost;
        
        # базовое логирование в JSON формате
        access_log /var/log/nginx/access.log json_combined;
        error_log /var/log/nginx/error.log warn;
        
        # проверка здоровья экземпляров
        location /health {
            proxy_pass http://api_gateway_health_check/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            
            # таймауты для health checks
            proxy_connect_timeout 2s;
            proxy_read_timeout 2s;
            proxy_send_timeout 2s;
        }
        
        # запросы к API Diagnostics для проверки Redis и состояния сервиса
        location /api/Diagnostics/ {
            proxy_pass http://api_gateway_sticky;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # запросы требующие привязки к серверу (сессии)
        location /user {
            proxy_pass http://api_gateway_sticky;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # дополнительные заголовки для WebSocket соединений
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
        
        # остальные запросы могут обрабатываться любым сервером
        location / {
            proxy_pass http://api_gateway;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # таймауты для обычных запросов
            proxy_connect_timeout 5s;
            proxy_read_timeout 60s;
            proxy_send_timeout 60s;
            
            # кэширование для статических ресурсов
            proxy_cache api_cache;
            proxy_cache_valid 200 302 10m;
            proxy_cache_valid 404 1m;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            proxy_cache_lock on;
            add_header X-Cache-Status $upstream_cache_status;
        }
        
        # метрики для мониторинга - исправляем путь
        location /metrics {
            proxy_pass http://api-gateway-1:9091/metrics;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }
        
        # swagger UI - добавляем для удобства разработки
        location /swagger {
            proxy_pass http://api_gateway/swagger;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }
        
        # лимиты и защита от DoS
        client_body_timeout 12s;
        client_header_timeout 12s;
        keepalive_timeout 15s;
        
        # компрессия для уменьшения трафика
        gzip on;
        gzip_min_length 1000;
        gzip_types text/plain text/css application/json application/javascript application/xml;
    }
}
