events {
    worker_connections 1024;
}

http {
    upstream api_gateway {
        # стратегия Round Robin 
        server api-gateway-1:80;
        server api-gateway-2:80;
        server api-gateway-3:80;
        
        # для использования стратегии Least Connections
        # least_conn;
    }
    
    # стратегия IP Hash для обеспечения привязки сессий
    upstream api_gateway_sticky {
        ip_hash;
        server api-gateway-1:80;
        server api-gateway-2:80;
        server api-gateway-3:80;
    }
    
    # балансировка с проверкой работоспособности
    upstream api_gateway_health_check {
        server api-gateway-1:80 max_fails=3 fail_timeout=30s;
        server api-gateway-2:80 max_fails=3 fail_timeout=30s;
        server api-gateway-3:80 max_fails=3 fail_timeout=30s;
        
        # включаем проверку активных соединений
        least_conn;
    }
    
    server {
        listen 80;
        server_name api.your-domain.com;
        
        # перенаправление на HTTPS
        return 301 https://$host$request_uri;
    }
    
    server {
        listen 443 ssl;
        server_name api.your-domain.com;
        
        ssl_certificate /etc/nginx/ssl/api-gateway.crt;
        ssl_certificate_key /etc/nginx/ssl/api-gateway.key;
        
        # оптимизации SSL
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        
        # проверка здоровья экземпляров
        location /health {
            proxy_pass http://api_gateway_health_check/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            
            # таймауты для health checks
            proxy_connect_timeout 2s;
            proxy_read_timeout 2s;
            proxy_send_timeout 2s;
        }
        
        # запросы требующие привязки к серверу (сессии)
        location /user {
            proxy_pass http://api_gateway_sticky;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # остальные запросы могут обрабатываться любым сервером
        location / {
            proxy_pass http://api_gateway;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # таймауты для обычных запросов
            proxy_connect_timeout 5s;
            proxy_read_timeout 60s;
            proxy_send_timeout 60s;
            
            # кэширование для статических ресурсов
            proxy_cache_valid 200 302 10m;
            proxy_cache_valid 404 1m;
        }
        
        # лимиты и защита от DoS
        client_max_body_size 10m;
        client_body_timeout 12s;
        client_header_timeout 12s;
        keepalive_timeout 15s;
        
        # компрессия для уменьшения трафика
        gzip on;
        gzip_min_length 1000;
        gzip_types text/plain text/css application/json application/javascript application/xml;
    }
}
